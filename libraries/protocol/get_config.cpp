#include <morphene/protocol/get_config.hpp>
#include <morphene/protocol/config.hpp>
#include <morphene/protocol/asset.hpp>
#include <morphene/protocol/types.hpp>
#include <morphene/protocol/version.hpp>

namespace morphene { namespace protocol {

fc::variant_object get_config()
{
   fc::mutable_variant_object result;

#ifdef IS_TEST_NET
   result[ "IS_TEST_NET" ] = true;
   result["TESTNET_BLOCK_LIMIT"] = TESTNET_BLOCK_LIMIT;
#else
   result[ "IS_TEST_NET" ] = false;
#endif

   result["MORPHENE_100_PERCENT"] = MORPHENE_100_PERCENT;
   result["MORPHENE_1_PERCENT"] = MORPHENE_1_PERCENT;
   result["MORPHENE_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD"] = MORPHENE_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD;
   result["MORPHENE_ADDRESS_PREFIX"] = MORPHENE_ADDRESS_PREFIX;
   result["MORPHENE_APR_PERCENT_MULTIPLY_PER_BLOCK"] = MORPHENE_APR_PERCENT_MULTIPLY_PER_BLOCK;
   result["MORPHENE_APR_PERCENT_SHIFT_PER_BLOCK"] = MORPHENE_APR_PERCENT_SHIFT_PER_BLOCK;
   result["MORPHENE_BLOCKCHAIN_HARDFORK_VERSION"] = MORPHENE_BLOCKCHAIN_HARDFORK_VERSION;
   result["MORPHENE_BLOCKCHAIN_VERSION"] = MORPHENE_BLOCKCHAIN_VERSION;
   result["MORPHENE_BLOCK_INTERVAL"] = MORPHENE_BLOCK_INTERVAL;
   result["MORPHENE_BLOCKS_PER_DAY"] = MORPHENE_BLOCKS_PER_DAY;
   result["MORPHENE_BLOCKS_PER_HOUR"] = MORPHENE_BLOCKS_PER_HOUR;
   result["MORPHENE_BLOCKS_PER_YEAR"] = MORPHENE_BLOCKS_PER_YEAR;
   result["MORPHENE_CHAIN_ID"] = MORPHENE_CHAIN_ID;
   result["MORPHENE_CREATE_ACCOUNT_DELEGATION_RATIO"] = MORPHENE_CREATE_ACCOUNT_DELEGATION_RATIO;
   result["MORPHENE_CREATE_ACCOUNT_DELEGATION_TIME"] = MORPHENE_CREATE_ACCOUNT_DELEGATION_TIME;
   result["MORPHENE_CREATE_ACCOUNT_WITH_MORPHENE_MODIFIER"] = MORPHENE_CREATE_ACCOUNT_WITH_MORPHENE_MODIFIER;
   result["MORPHENE_GENESIS_TIME"] = MORPHENE_GENESIS_TIME;
   result["MORPHENE_HARDFORK_REQUIRED_WITNESSES"] = MORPHENE_HARDFORK_REQUIRED_WITNESSES;
   result["MORPHENE_INFLATION_NARROWING_PERIOD"] = MORPHENE_INFLATION_NARROWING_PERIOD;
   result["MORPHENE_INFLATION_RATE_START_PERCENT"] = MORPHENE_INFLATION_RATE_START_PERCENT;
   result["MORPHENE_INFLATION_RATE_STOP_PERCENT"] = MORPHENE_INFLATION_RATE_STOP_PERCENT;
   result["MORPHENE_INIT_WITNESS_NAME"] = MORPHENE_INIT_WITNESS_NAME;
   result["MORPHENE_INIT_PUBLIC_KEY_STR"] = MORPHENE_INIT_PUBLIC_KEY_STR;
#if 0
   // do not expose private key, period.
   // we need this line present but inactivated so CI check for all constants in config.hpp doesn't complain.
   result["MORPHENE_INIT_PRIVATE_KEY"] = MORPHENE_INIT_PRIVATE_KEY;
#endif
   result["MORPHENE_INIT_SUPPLY"] = MORPHENE_INIT_SUPPLY;
   result["MORPHENE_INIT_TIME"] = MORPHENE_INIT_TIME;
   result["MORPHENE_IRREVERSIBLE_THRESHOLD"] = MORPHENE_IRREVERSIBLE_THRESHOLD;
   result["MORPHENE_MAX_ACCOUNT_CREATION_FEE"] = MORPHENE_MAX_ACCOUNT_CREATION_FEE;
   result["MORPHENE_MAX_ACCOUNT_NAME_LENGTH"] = MORPHENE_MAX_ACCOUNT_NAME_LENGTH;
   result["MORPHENE_MAX_ACCOUNT_WITNESS_VOTES"] = MORPHENE_MAX_ACCOUNT_WITNESS_VOTES;
   result["MORPHENE_MAX_ASSET_WHITELIST_AUTHORITIES"] = MORPHENE_MAX_ASSET_WHITELIST_AUTHORITIES;
   result["MORPHENE_MAX_AUTHORITY_MEMBERSHIP"] = MORPHENE_MAX_AUTHORITY_MEMBERSHIP;
   result["MORPHENE_MAX_BLOCK_SIZE"] = MORPHENE_MAX_BLOCK_SIZE;
   result["MORPHENE_SOFT_MAX_BLOCK_SIZE"] = MORPHENE_SOFT_MAX_BLOCK_SIZE;
   result["MORPHENE_MAX_MEMO_SIZE"] = MORPHENE_MAX_MEMO_SIZE;
   result["MORPHENE_MAX_WITNESSES"] = MORPHENE_MAX_WITNESSES;
   result["MORPHENE_MAX_PROXY_RECURSION_DEPTH"] = MORPHENE_MAX_PROXY_RECURSION_DEPTH;
   result["MORPHENE_MAX_RATION_DECAY_RATE"] = MORPHENE_MAX_RATION_DECAY_RATE;
   result["MORPHENE_MAX_RUNNER_WITNESSES"] = MORPHENE_MAX_RUNNER_WITNESSES;
   result["MORPHENE_MAX_SATOSHIS"] = MORPHENE_MAX_SATOSHIS;
   result["MORPHENE_MAX_SHARE_SUPPLY"] = MORPHENE_MAX_SHARE_SUPPLY;
   result["MORPHENE_MAX_SIG_CHECK_DEPTH"] = MORPHENE_MAX_SIG_CHECK_DEPTH;
   result["MORPHENE_MAX_SIG_CHECK_ACCOUNTS"] = MORPHENE_MAX_SIG_CHECK_ACCOUNTS;
   result["MORPHENE_MAX_TIME_UNTIL_EXPIRATION"] = MORPHENE_MAX_TIME_UNTIL_EXPIRATION;
   result["MORPHENE_MAX_TRANSACTION_SIZE"] = MORPHENE_MAX_TRANSACTION_SIZE;
   result["MORPHENE_MAX_UNDO_HISTORY"] = MORPHENE_MAX_UNDO_HISTORY;
   result["MORPHENE_MAX_URL_LENGTH"] = MORPHENE_MAX_URL_LENGTH;
   result["MORPHENE_MAX_VOTED_WITNESSES"] = MORPHENE_MAX_VOTED_WITNESSES;
   result["MORPHENE_MAX_WITHDRAW_ROUTES"] = MORPHENE_MAX_WITHDRAW_ROUTES;
   result["MORPHENE_MAX_WITNESS_URL_LENGTH"] = MORPHENE_MAX_WITNESS_URL_LENGTH;
   result["MORPHENE_MIN_ACCOUNT_CREATION_FEE"] = MORPHENE_MIN_ACCOUNT_CREATION_FEE;
   result["MORPHENE_MIN_ACCOUNT_NAME_LENGTH"] = MORPHENE_MIN_ACCOUNT_NAME_LENGTH;
   result["MORPHENE_MIN_BLOCK_SIZE_LIMIT"] = MORPHENE_MIN_BLOCK_SIZE_LIMIT;
   result["MORPHENE_MIN_BLOCK_SIZE"] = MORPHENE_MIN_BLOCK_SIZE;
   result["MORPHENE_MIN_TRANSACTION_EXPIRATION_LIMIT"] = MORPHENE_MIN_TRANSACTION_EXPIRATION_LIMIT;
   result["MORPHENE_MIN_TRANSACTION_SIZE_LIMIT"] = MORPHENE_MIN_TRANSACTION_SIZE_LIMIT;
   result["MORPHENE_MIN_UNDO_HISTORY"] = MORPHENE_MIN_UNDO_HISTORY;
   result["MORPHENE_MINER_ACCOUNT"] = MORPHENE_MINER_ACCOUNT;
   result["MORPHENE_NULL_ACCOUNT"] = MORPHENE_NULL_ACCOUNT;
   result["MORPHENE_NUM_INIT_WITNESSES"] = MORPHENE_NUM_INIT_WITNESSES;
   result["MORPHENE_OWNER_AUTH_HISTORY_TRACKING_START_BLOCK_NUM"] = MORPHENE_OWNER_AUTH_HISTORY_TRACKING_START_BLOCK_NUM;
   result["MORPHENE_OWNER_AUTH_RECOVERY_PERIOD"] = MORPHENE_OWNER_AUTH_RECOVERY_PERIOD;
   result["MORPHENE_OWNER_UPDATE_LIMIT"] = MORPHENE_OWNER_UPDATE_LIMIT;
   result["MORPHENE_PRODUCER_APR_PERCENT"] = MORPHENE_PRODUCER_APR_PERCENT;
   result["MORPHENE_PROXY_TO_SELF_ACCOUNT"] = MORPHENE_PROXY_TO_SELF_ACCOUNT;
   result["MORPHENE_SECONDS_PER_YEAR"] = MORPHENE_SECONDS_PER_YEAR;
   result["MORPHENE_TEMP_ACCOUNT"] = MORPHENE_TEMP_ACCOUNT;
   result["MORPHENE_VESTING_WITHDRAW_INTERVALS"] = MORPHENE_VESTING_WITHDRAW_INTERVALS;
   result["MORPHENE_VESTING_WITHDRAW_INTERVAL_SECONDS"] = MORPHENE_VESTING_WITHDRAW_INTERVAL_SECONDS;
   result["MORPHENE_VOTING_MANA_REGENERATION_SECONDS"] = MORPHENE_VOTING_MANA_REGENERATION_SECONDS;
   result["MORPH_SYMBOL"] = MORPH_SYMBOL;
   result["VESTS_SYMBOL"] = VESTS_SYMBOL;
   result["MORPHENE_VIRTUAL_SCHEDULE_LAP_LENGTH"] = MORPHENE_VIRTUAL_SCHEDULE_LAP_LENGTH;
   result["MORPHENE_DELEGATION_RETURN_PERIOD"] = MORPHENE_DELEGATION_RETURN_PERIOD;
   result["MORPHENE_RD_MIN_DECAY_BITS"] = MORPHENE_RD_MIN_DECAY_BITS;
   result["MORPHENE_RD_MAX_DECAY_BITS"] = MORPHENE_RD_MAX_DECAY_BITS;
   result["MORPHENE_RD_DECAY_DENOM_SHIFT"] = MORPHENE_RD_DECAY_DENOM_SHIFT;
   result["MORPHENE_RD_MAX_POOL_BITS"] = MORPHENE_RD_MAX_POOL_BITS;
   result["MORPHENE_RD_MAX_BUDGET_1"] = MORPHENE_RD_MAX_BUDGET_1;
   result["MORPHENE_RD_MAX_BUDGET_2"] = MORPHENE_RD_MAX_BUDGET_2;
   result["MORPHENE_RD_MAX_BUDGET_3"] = MORPHENE_RD_MAX_BUDGET_3;
   result["MORPHENE_RD_MAX_BUDGET"] = MORPHENE_RD_MAX_BUDGET;
   result["MORPHENE_RD_MIN_DECAY"] = MORPHENE_RD_MIN_DECAY;
   result["MORPHENE_RD_MIN_BUDGET"] = MORPHENE_RD_MIN_BUDGET;
   result["MORPHENE_RD_MAX_DECAY"] = MORPHENE_RD_MAX_DECAY;
   result["MORPHENE_ACCOUNT_SUBSIDY_PRECISION"] = MORPHENE_ACCOUNT_SUBSIDY_PRECISION;
   result["MORPHENE_WITNESS_SUBSIDY_BUDGET_PERCENT"] = MORPHENE_WITNESS_SUBSIDY_BUDGET_PERCENT;
   result["MORPHENE_WITNESS_SUBSIDY_DECAY_PERCENT"] = MORPHENE_WITNESS_SUBSIDY_DECAY_PERCENT;
   result["MORPHENE_DEFAULT_ACCOUNT_SUBSIDY_DECAY"] = MORPHENE_DEFAULT_ACCOUNT_SUBSIDY_DECAY;
   result["MORPHENE_DEFAULT_ACCOUNT_SUBSIDY_BUDGET"] = MORPHENE_DEFAULT_ACCOUNT_SUBSIDY_BUDGET;
   result["MORPHENE_DECAY_BACKSTOP_PERCENT"] = MORPHENE_DECAY_BACKSTOP_PERCENT;

   return result;
}

} } // morphene::protocol
